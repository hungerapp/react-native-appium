name: E2E Tests

on:
  schedule:
    - cron: "0 0 * * *" # run every day at 00:00
  workflow_dispatch:
    inputs:
      tags:
        description: "要運行的測試標籤 (例如: regression, login)"
        required: false
        default: ""
      platform:
        description: "測試平台"
        required: true
        type: choice
        options:
          - android
          - ios
      device_count:
        description: "模擬器數量"
        required: true
        type: choice
        options:
          - 1
          - 2
          - 3
          - 4
        default: "1"
      app_version:
        description: "應用程序版本"
        required: true
        type: string
        default: "latest"

env:
  PYTHON_VERSION: "3.9"

jobs:
  test:
    name: Run E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        if: github.event.inputs.platform == 'android'
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set up Android SDK
        if: github.event.inputs.platform == 'android'
        uses: android-actions/setup-android@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Android Emulator
        if: github.event.inputs.platform == 'android'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          profile: pixel_7
          cores: 2
          ram-size: 4096M
          disk-size: 10240M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -memory 4096
          disable-animations: true
          script: echo "Emulator started"
          emulator-boot-timeout: 900
          force-avd-creation: true
          target: google_apis_playstore

      - name: Download app files
        run: |
          mkdir -p assets
          if [ "${{ github.event.inputs.platform }}" = "android" ]; then
            curl -L "https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.app_version }}/app-debug.apk" -o assets/app-debug.apk
          else
            curl -L "https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.app_version }}/HotcakeBeta.app" -o assets/HotcakeBeta.app
          fi

      - name: Set up environment variables
        run: |
          cat > .env << EOF
          TEST_ENV=github_actions
          APPIUM_OS=${{ github.event.inputs.platform }}
          ANDROID_APP_PATH=./assets/app-debug.apk
          IOS_APP_PATH=./assets/HotcakeBeta.app
          DEVICE_COUNT=${{ github.event.inputs.device_count }}
          NO_RESET=True
          AUTO_ACCEPT_ALERTS=True
          IMPLICIT_WAIT=25
          EOF

      - name: Create Test Directories
        run: |
          mkdir -p allure-results
          mkdir -p allure-report
          mkdir -p screenshots
          mkdir -p test-results

      - name: Run tests
        run: |
          if [ -n "${{ github.event.inputs.tags }}" ]; then
            python -m pytest -v \
              -k "${{ github.event.inputs.tags }}" \
              --alluredir=allure-results \
              -n="${{ github.event.inputs.device_count }}" \
              --dist=loadfile
          else
            python -m pytest -v \
              --alluredir=allure-results \
              -n="${{ github.event.inputs.device_count }}" \
              --dist=loadfile
          fi

      - name: Upload Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-screenshots
          path: |
            allure-results/**/attachments/*
            allure-results/**/*.png
            allure-results/**/*.jpg
            allure-results/**/*.jpeg
          retention-days: 30

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            allure-results/
            test-output/
          retention-days: 30

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const message = `❌ 測試失敗: ${context.workflow} - ${context.job}\n\n` +
              `測試平台: ${{ github.event.inputs.platform }}\n` +
              `模擬器數量: ${{ github.event.inputs.device_count }}\n` +
              `測試標籤: ${{ github.event.inputs.tags || '全部' }}\n` +
              `詳情: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `測試失敗: ${context.workflow} - ${context.job}`,
              body: message
            });

  generate-report:
    name: Generate Allure Report
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: allure-results
          allure_history: allure-history
          keep_reports: 20
          report_name: mobile-allure-report
          report_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          allure_report: allure-report
          gh_pages: gh-pages
          github_run_num: ${{ github.run_number }}
          github_run_id: ${{ github.run_id }}
          github_repo: ${{ github.repository }}
          github_repo_owner: ${{ github.repository_owner }}
          github_tests_repo: ${{ github.repository }}
          github_server_url: ${{ github.server_url }}
